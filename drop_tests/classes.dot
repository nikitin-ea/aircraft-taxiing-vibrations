digraph "classes" {
rankdir=BT
charset="utf-8"
"drop_tests.drop_test_sim.CustomResult" [color="black", fontcolor="black", label=<{CustomResult|ATTRIBUTE_NAMES : tuple<br ALIGN="LEFT"/>TEST_DATA_NAMES : tuple<br ALIGN="LEFT"/>axle_position : ndarray<br ALIGN="LEFT"/>t : ndarray<br ALIGN="LEFT"/>t_u_test : ndarray<br ALIGN="LEFT"/>t_vertical_load_test : ndarray<br ALIGN="LEFT"/>t_y_test : ndarray<br ALIGN="LEFT"/>tyre_deflection : ndarray<br ALIGN="LEFT"/>u_test : ndarray<br ALIGN="LEFT"/>vertical_force : ndarray<br ALIGN="LEFT"/>vertical_load_test : ndarray<br ALIGN="LEFT"/>y : ndarray<br ALIGN="LEFT"/>y_test : ndarray<br ALIGN="LEFT"/>|load_files(filenames)<br ALIGN="LEFT"/>load_test_data(filename)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"drop_tests.drop_test_sim.DropTestModelCase" [color="black", fontcolor="black", label=<{DropTestModelCase|DEFAULT_NUMPTS : int<br ALIGN="LEFT"/>EVENTS : tuple<br ALIGN="LEFT"/>INIT_HEIGHT : float<br ALIGN="LEFT"/>KJ_COEFF : float<br ALIGN="LEFT"/>PRINTEVERY : int<br ALIGN="LEFT"/>events_dict : dict<br ALIGN="LEFT"/>fig<br ALIGN="LEFT"/>filename<br ALIGN="LEFT"/>initial_conditions<br ALIGN="LEFT"/>landing_gear : LandingGearModel<br ALIGN="LEFT"/>num_pts<br ALIGN="LEFT"/>result<br ALIGN="LEFT"/>setup<br ALIGN="LEFT"/>time_span<br ALIGN="LEFT"/>time_span<br ALIGN="LEFT"/>|detect_piston_stop(direction)<br ALIGN="LEFT"/>detect_tyre_contact(direction)<br ALIGN="LEFT"/>draw_subplot(ax, xdata, ydata, style, text, limits)<br ALIGN="LEFT"/>get_events_list()<br ALIGN="LEFT"/>get_result()<br ALIGN="LEFT"/>integrate()<br ALIGN="LEFT"/>load_file(filename)<br ALIGN="LEFT"/>plot_results()<br ALIGN="LEFT"/>postprocess()<br ALIGN="LEFT"/>process_events()<br ALIGN="LEFT"/>save_data(path)<br ALIGN="LEFT"/>save_figure(path)<br ALIGN="LEFT"/>scan_directory(path)<br ALIGN="LEFT"/>set_xmargin(ax, left, right)<br ALIGN="LEFT"/>system_eqns_rhs(t, z)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"scipy.integrate._ivp.ivp.OdeResult" [color="black", fontcolor="black", label=<{OdeResult|axle_position : ndarray<br ALIGN="LEFT"/>t<br ALIGN="LEFT"/>tyre_deflection : ndarray<br ALIGN="LEFT"/>vertical_force : ndarray<br ALIGN="LEFT"/>y<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"scipy.optimize._optimize.OptimizeResult" [color="black", fontcolor="black", label=<{OptimizeResult|hess_inv : NoneType<br ALIGN="LEFT"/>jac : ndarray<br ALIGN="LEFT"/>x : ndarray<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"drop_tests.drop_test_sim.CustomResult" -> "scipy.integrate._ivp.ivp.OdeResult" [arrowhead="empty", arrowtail="none"];
"scipy.integrate._ivp.ivp.OdeResult" -> "scipy.optimize._optimize.OptimizeResult" [arrowhead="empty", arrowtail="none"];
"drop_tests.drop_test_sim.CustomResult" -> "drop_tests.drop_test_sim.DropTestModelCase" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="result", style="solid"];
"scipy.integrate._ivp.ivp.OdeResult" -> "drop_tests.drop_test_sim.DropTestModelCase" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="result", style="solid"];
}
